{"version":3,"sources":["webpack:///./src/pages/about.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/ogp.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","props","data","a","createElement","site","siteMetadata","title","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_wait_for_route_change__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_4__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_4___default","_parse_path__WEBPACK_IMPORTED_MODULE_5__","React","createContext","Consumer","staticQueryData","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Ogp","_data$site$siteMetada","siteUrl","description","image","ogp","publicURL","react_default","Helmet","lang","prefix","name","content","property","gatsby_browser_entry","ogp_Ogp","_1902316602","Layout","Wrapper","Header","LinkList","LinkItem","to","styled","div","withConfig","displayName","componentId","header","ul","li","layout_Layout","_1097489062"],"mappings":"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","file":"component---src-pages-about-js-417c43daf44e1536e9bb.js","sourcesContent":["// @flow\nimport React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/layout';\n\n// クエリ結果はprops.dataとして渡されます\ntype Props = {\n  data: Object\n};\n\nexport default (props: Props) => {\n  const { data } = props;\n  return (\n    <Layout>\n      <h1>{`About ${data.site.siteMetadata.title}`}</h1>\n      <p>ネコミミのネコミミによるネコミミのためのページ！</p>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport { waitForRouteChange } from \"./wait-for-route-change\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  waitForRouteChange,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","// @flow\nimport React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { graphql, StaticQuery } from 'gatsby';\n\ntype Props = {\n  data: Object\n};\n\nconst Ogp = (props: Props) => {\n  const { data } = props;\n  const { title, siteUrl, description } = data.site.siteMetadata;\n  const image = `${siteUrl}${data.ogp.publicURL}`;\n  return (\n    <Helmet>\n      <html lang=\"ja\" prefix=\"og: http://ogp.me/ns#\" />\n      <title>{title}</title>\n      <meta name=\"description\" content={description} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n      <meta property=\"og:site_name\" content={title} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:type\" content=\"article\" />\n      <meta property=\"og:url\" content={siteUrl} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n    </Helmet>\n  );\n};\n\nconst query = graphql`\n  query {\n    ogp: file(relativePath: { eq: \"images/ogp.png\" }) {\n      publicURL\n    }\n    site {\n      siteMetadata {\n        title\n        siteUrl\n        description\n      }\n    }\n  }\n`;\n\nexport default () => (\n  <StaticQuery query={query} render={data => <Ogp data={data} />} />\n);\n","// @flow\nimport React, { type Node } from 'react';\nimport { graphql, StaticQuery, Link } from 'gatsby';\nimport styled from 'styled-components';\nimport Ogp from './ogp';\n\ntype Props = {\n  data: Object,\n  children: Node\n};\n\nconst Layout = (props: Props) => {\n  const { data, children } = props;\n  return (\n    <Wrapper>\n      <Ogp />\n      <Header>\n        <h1>{data.site.siteMetadata.title}</h1>\n        <LinkList>\n          <LinkItem>\n            <Link to=\"/\">Home</Link>\n          </LinkItem>\n          <LinkItem>\n            <Link to=\"/about\">About</Link>\n          </LinkItem>\n        </LinkList>\n      </Header>\n      <main>{children}</main>\n    </Wrapper>\n  );\n};\n\nconst query = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`;\n\nconst Wrapper = styled.div`\n  max-width: 1070px;\n  margin: 0 auto;\n  padding: 0 1rem;\n`;\n\nconst Header = styled.header`\n  display: flex;\n  align-items: baseline;\n  justify-content: space-between;\n`;\n\nconst LinkList = styled.ul`\n  list-style: none;\n  display: flex;\n  margin: 0;\n`;\n\nconst LinkItem = styled.li`\n  margin-right: 1rem;\n\n  &:last-of-type {\n    margin-right: 0;\n  }\n`;\n\nexport default ({ children }: { children: Node }) => (\n  <StaticQuery\n    query={query}\n    render={data => <Layout data={data}>{children}</Layout>}\n  />\n);\n"],"sourceRoot":""}