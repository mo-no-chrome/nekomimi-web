{"version":3,"sources":["webpack:///./src/components/postItem.js","webpack:///./src/components/postList.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/ogp.js","webpack:///./src/components/layout.js"],"names":["postItem","props","post","react_default","a","createElement","gatsby_browser_entry","to","fields","slug","Wrapper","postItem_Date","frontmatter","date","Title","title","Excerpt","excerpt","styled","article","withConfig","displayName","componentId","Date","div","h3","p","postList","posts","List","map","_ref","ListItem","key","id","ul","li","__webpack_require__","d","__webpack_exports__","pages_query","data","layout","allMarkdownRemark","query","r","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_wait_for_route_change__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_4__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_4___default","_parse_path__WEBPACK_IMPORTED_MODULE_5__","React","createContext","Consumer","staticQueryData","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Ogp","_data$site$siteMetada","site","siteMetadata","siteUrl","description","image","ogp","publicURL","Helmet","lang","prefix","name","content","property","ogp_Ogp","_1902316602","Layout","Header","LinkList","LinkItem","header","layout_Layout","_1097489062"],"mappings":"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","file":"component---src-pages-index-js-07775e22c607e04d589a.js","sourcesContent":["// @flow\nimport React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport styled from 'styled-components';\n\ntype Props = {\n  post: Object\n};\n\nexport default (props: Props) => {\n  const { post } = props;\n  return (\n    <Link to={post.fields.slug}>\n      <Wrapper>\n        <Date>{post.frontmatter.date}</Date>\n        <Title>{post.frontmatter.title}</Title>\n        <Excerpt>{post.excerpt}</Excerpt>\n      </Wrapper>\n    </Link>\n  );\n};\n\nexport const query = graphql`\n  fragment postItem on MarkdownRemark {\n    fields {\n      slug\n    }\n    frontmatter {\n      title\n      date(formatString: \"YYYY/MM/DD\")\n    }\n    excerpt\n  }\n`;\n\nconst Wrapper = styled.article`\n  display: flex;\n  flex-direction: column;\n  padding: 1.5rem;\n  box-shadow: 0 0 5px rgba(0, 0, 0, 0.1);\n  border-radius: 3px;\n  transition: box-shadow 0.2s ease-out;\n\n  &:hover {\n    box-shadow: 0 0 20px rgba(0, 0, 0, 0.2);\n  }\n`;\n\nconst Date = styled.div`\n  color: #999;\n  font-size: 0.8rem;\n`;\n\nconst Title = styled.h3`\n  margin: 0.25rem 0 0;\n`;\n\nconst Excerpt = styled.p`\n  margin-top: 1rem;\n  font-size: 0.9rem;\n  color: #fb251b;\n  overflow: hidden;\n`;\n","// @flow\nimport React from 'react';\nimport { graphql } from 'gatsby';\nimport styled from 'styled-components';\nimport PostItem from './postItem';\n\ntype Props = {\n  posts: Array<Object>\n};\n\nexport default (props: Props) => {\n  const { posts } = props;\n  return (\n    <List>\n      {posts.map(({ post }) => (\n        <ListItem key={post.id}>\n          <PostItem post={post} />\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nexport const query = graphql`\n  fragment postList on MarkdownRemarkEdge {\n    post: node {\n      id\n      ...postItem\n    }\n  }\n`;\n\nconst List = styled.ul`\n  list-style: none;\n  margin: 0;\n`;\n\nconst ListItem = styled.li`\n  margin: 0 0 1.5rem;\n`;\n","// @flow\nimport React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/layout';\nimport PostList from '../components/postList';\n\ntype Props = {\n  data: Object\n};\n\nexport default (props: Props) => {\n  const { data } = props;\n  return (\n    <Layout>\n      <PostList posts={data.allMarkdownRemark.posts} />\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark {\n      posts: edges {\n        ...postList\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport { waitForRouteChange } from \"./wait-for-route-change\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  waitForRouteChange,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","// @flow\nimport React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { graphql, StaticQuery } from 'gatsby';\n\ntype Props = {\n  data: Object\n};\n\nconst Ogp = (props: Props) => {\n  const { data } = props;\n  const { title, siteUrl, description } = data.site.siteMetadata;\n  const image = `${siteUrl}${data.ogp.publicURL}`;\n  return (\n    <Helmet>\n      <html lang=\"ja\" prefix=\"og: http://ogp.me/ns#\" />\n      <title>{title}</title>\n      <meta name=\"description\" content={description} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n      <meta property=\"og:site_name\" content={title} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:type\" content=\"article\" />\n      <meta property=\"og:url\" content={siteUrl} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n    </Helmet>\n  );\n};\n\nconst query = graphql`\n  query {\n    ogp: file(relativePath: { eq: \"images/ogp.png\" }) {\n      publicURL\n    }\n    site {\n      siteMetadata {\n        title\n        siteUrl\n        description\n      }\n    }\n  }\n`;\n\nexport default () => (\n  <StaticQuery query={query} render={data => <Ogp data={data} />} />\n);\n","// @flow\nimport React, { type Node } from 'react';\nimport { graphql, StaticQuery, Link } from 'gatsby';\nimport styled from 'styled-components';\nimport Ogp from './ogp';\n\ntype Props = {\n  data: Object,\n  children: Node\n};\n\nconst Layout = (props: Props) => {\n  const { data, children } = props;\n  return (\n    <Wrapper>\n      <Ogp />\n      <Header>\n        <h1>{data.site.siteMetadata.title}</h1>\n        <LinkList>\n          <LinkItem>\n            <Link to=\"/\">Home</Link>\n          </LinkItem>\n          <LinkItem>\n            <Link to=\"/about\">About</Link>\n          </LinkItem>\n        </LinkList>\n      </Header>\n      <main>{children}</main>\n    </Wrapper>\n  );\n};\n\nconst query = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`;\n\nconst Wrapper = styled.div`\n  max-width: 1070px;\n  margin: 0 auto;\n  padding: 0 1rem;\n`;\n\nconst Header = styled.header`\n  display: flex;\n  align-items: baseline;\n  justify-content: space-between;\n`;\n\nconst LinkList = styled.ul`\n  list-style: none;\n  display: flex;\n  margin: 0;\n`;\n\nconst LinkItem = styled.li`\n  margin-right: 1rem;\n\n  &:last-of-type {\n    margin-right: 0;\n  }\n`;\n\nexport default ({ children }: { children: Node }) => (\n  <StaticQuery\n    query={query}\n    render={data => <Layout data={data}>{children}</Layout>}\n  />\n);\n"],"sourceRoot":""}